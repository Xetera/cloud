---
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# exposing argocd to tailscale
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-tailscale
  namespace: argocd
spec:
  defaultBackend:
    service:
      name: argocd-server
      port:
        name: https
  ingressClassName: tailscale
  tls:
    - hosts:
        - argocd
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: github-app-privatekey
  namespace: argocd
type: kubernetes.io/tls
spec:
  itemPath: "vaults/k8s-cloud/items/argocd-github-app"
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infrastructure
  namespace: argocd
  annotations:
    notifications.argoproj.io/subscribe.app-deployed.github: ""
spec:
  project: default
  source:
    repoURL: https://github.com/Xetera/cloud
    path: manifests
    targetRevision: main
    directory:
      recurse: true
      jsonnet: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.github: |
    appID: 1169215
    installationID: 62203129
    privateKey: $github-app-privatekey
  trigger.sync-operation-change: |
    - when: app.status.operationState.phase in ['Succeeded']
      send: [github-commit-status]
    - when: app.status.operationState.phase in ['Running']
      send: [github-commit-status]
    - when: app.status.operationState.phase in ['Error', 'Failed']
      send: [app-sync-failed, github-commit-status]
  trigger.on-deployed: |
    when: app.status.operationState.phase in ['Succeeded']
    send: [app-deployed]
  template.app-deployed: |
    message: |
      Application {{.app.metadata.name}} is now running new version of deployments manifests.
    github:
      repoURLPath: "{{.app.spec.source.repoURL}}"
      revisionPath: "{{.app.status.operationState.syncResult.revision}}"
      status:
        state: success
        label: "continuous-delivery/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
      deployment:
        state: success
        environment: production
        environmentURL: "https://{{.app.metadata.name}}.example.com"
        logURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
        requiredContexts: []
        autoMerge: true
        transientEnvironment: false
        reference: v1.0.0
      pullRequestComment:
        content: |
          Application {{.app.metadata.name}} is now running new version of deployments manifests.
          See more here: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true
---

